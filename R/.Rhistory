#------------------------------------#
#----Analysis------------------------#
# Read data in
d<-getCPSdata()
head(d)
summary(d)
PA<-d$GESTCEN==23
dPA<-d[PA,]
head(dPA)
rm(PA)
# Number of people that reported their wage in food services and drinking places industry in PA
reported<-sum(dPA[dPA$PTERNHLY!=-0.01,]$PWCMPWGT)/length(unique(dPA$YYYYMM))
reported_not<-sum(dPA[dPA$PTERNHLY==-0.01,]$PWCMPWGT)/length(unique(dPA$YYYYMM))
reported/(reported+reported_not) # so we have wage data on 17% percents of the industry in question
rm(reported,reported_not)
rm(reported,reported_not)
# Histograms of hourly wages in PA in April for years 2007,2008,2009, and 2011
png("figures/HistWages.png",units="px",height=600,width=950) # Save the histogram in the figures folder
par(mfrow=c(2,2),mai=c(1,1,0.6,0.1))
for(year in c(200704,200804,200904,201104)) {
wagesPA<-dPA[dPA$YYYYMM==year & dPA$PRMLR==1 & dPA$PTERNHLY>-0.01,]$PTERNHLY # hourly wages
wts<-dPA[dPA$YYYYMM==year & dPA$PRMLR==1 & dPA$PTERNHLY>-0.01,]$PWCMPWGT # weights
# Histogram
weighted.hist(wagesPA,wts,breaks=1:15, freq=F,
xlab="Hourly Wage,$",ylab="Percent",ylim=c(0,0.6), axes=F,
cex.lab=1.8)
axis(2, at = seq(0, 0.6, 0.1), labels = paste(seq(0,60,10)),cex.axis=1.5)
abline(v=6.25,lty="dashed",col="red")
year_str<-substr(as.character(year),1,4)
title(paste(c("Distribution of restaurant workers\nby wage in PA in April",year_str),collapse=" "),cex.main=2)
legend("topleft","$7.25",lty="dashed",col="red",cex=1.7,bty="n")
}
par(mfrow=c(1,1))
dev.off()
rm(year,year_str,wts,wagesPA)
# Fraction of workers that work at or above $7.25(new minimum wage)
k1<-data.frame(k1=rate(dPA,1,dPA$PTERNHLY>=7.25,-0.01))
k1ts<-ts(k1$k1,start=c(2005,1),frequency=12) #convert to time series
# Fraction of workers that work below $7.25(new minimum wage)
k2<-data.frame(k2=rate(dPA,1,(dPA$PTERNHLY < 7.25 & dPA$PTERNHLY>-0.01),-0.01))
k2ts<-ts(k2$k2,start=c(2005,1),frequency=12) #convert to time series
# Plot the fraction of workers that work at or above $7.25(new minimum wage)
# minus seasonal variations
deck1<-decompose(k1ts)
plot(deck1)
grBreaks<-dput(rownames(k1)[seq(1, length(rownames(k1)), 3)])
k1p1<-ggplot(k1,aes(x=rownames(k1),y=data.frame(k1ts-deck1$seasonal)$k1*100))+
ggtitle("At or above $7.25") +
theme(plot.title = element_text(size=18,face="bold"))+
xlab("Period")+ylab("Percent of employed")+
geom_point()+
geom_line(aes(y=data.frame(k1ts-deck1$seasonal)$k1*100,group=1))+
geom_line(aes(y=deck1$trend*100,group=1),col="blue")+
scale_x_discrete(breaks=grBreaks,labels=grBreaks) +
scale_y_continuous(limits = c(10, 100)) +
theme(axis.text.x=element_text(angle = 75, hjust = 1),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
# Plot the fraction of workers that work below $7.25(new minimum wage)
# minus seasonal variations
deck2<-decompose(k2ts)
plot(deck2)
grBreaks<-dput(rownames(k2)[seq(1, length(rownames(k2)), 3)])
k2p1<-ggplot(k2,aes(x=rownames(k2),y=data.frame(k2ts-deck2$seasonal)$k2*100))+
ggtitle("Below $7.25") +
theme(plot.title = element_text(size=18,face="bold"))+
xlab("Period")+ylab("Percent of employed")+
geom_point()+
geom_line(aes(y=data.frame(k2ts-deck2$seasonal)$k2*100,group=1))+
geom_line(aes(y=deck2$trend*100,group=1),col="blue")+
scale_x_discrete(breaks=grBreaks,labels=grBreaks) +
scale_y_continuous(limits = c(10, 100)) +
theme(axis.text.x=element_text(angle = 75, hjust = 1),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
grid.arrange(k1p1,k2p1,nrow=2)
rm(k1,k1ts,k2,k2ts,k1p1,k2p1)
# Unemployment rate in the Food industry in PA unadjusted
unemp<-data.frame(unemp=rate(dPA,2,dPA$PTERNHLY>-0.02,-0.02))
unempts<-ts(unemp$unemp,start=c(2005,1),frequency=12)
decunemp<-decompose(unempts)
# Employment rate in the Food industry in PA unadjusted
emp<-data.frame(emp=rate(dPA,1,dPA$PTERNHLY>-0.02,-0.02))
empts<-ts(emp$emp,start=c(2005,1),frequency=12)
decemp<-decompose(empts)
# Plot the unemployment rate in PA # minus seasonal variations
unempp<-ggplot(unemp,aes(x=rownames(unemp),y=data.frame(unempts-decunemp$seasonal)$unemp*100))+
ggtitle("Unemployment rate in the Food Services and Drinking Places\nindustry in PA") +
geom_point() +
theme(plot.title = element_text(size=18,face="bold")) +
xlab("Period")+ylab("Rate,%") +
geom_line(aes(y=data.frame(unempts-decunemp$seasonal)$unemp*100,group=1)) +
geom_line(aes(y=decunemp$trend*100,group=1),col="blue") +
scale_x_discrete(breaks=grBreaks,labels=grBreaks) +
theme(axis.text.x=element_text(angle = 75, hjust = 1),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
# Plot the employment rate in PA # minus seasonal variations
empp<-ggplot(emp,aes(x=rownames(emp),y=data.frame(empts-decemp$seasonal)$emp*100)) +
ggtitle("Employment rate in the Food Services and Drinking Places\nindustry in PA") +
theme(plot.title = element_text(size=18,face="bold"))+
xlab("Period")+ylab("Rate,%")+
geom_point()+
geom_line(aes(y=data.frame(empts-decemp$seasonal)$emp*100,group=1))+
geom_line(aes(y=decemp$trend*100,group=1),col="blue")+
scale_x_discrete(breaks=grBreaks,labels=grBreaks) +
theme(axis.text.x=element_text(angle = 75, hjust = 1),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
grid.arrange(empp,unempp,nrow=2)
# Save the plot in figures folder
rm(emp,empp,unempp,decemp,decunemp,deck1,deck2,empts,unempts)
par(mfrow=c(1,2))
hist(unemp$unemp*100,
freq=F,
breaks=8,
ylim=c(0,0.14),
main="Histogram of Unemployment Rate\nin the Food Services and Drinking Places\nIndustry in PA for the period Jan 2005-Dec 2012",
xlab="Unemployment rate,%")
legend("topright", c("Normal\nDistribution"), col=c("blue"), lwd=1)
# Add normal distribution curve
q<-quantile(unemp$unemp*100)
sd<-sd(unemp$unemp*100)
m<-mean(unemp$unemp*100)
curve(dnorm(x,m,sd), add=TRUE,col="blue")
qqnorm(unemp$unemp*100)
qqline(unemp$unemp*100)
par(mfrow=c(1,1))
rm(q,sd,m)
# Checking for normality of the unemployment rate using the Shapiro test
shapiro.test(unemp$unemp)
?shapiro.test
regData<-data.frame(unemp*100)
regData$crimonthDummy<-c(rep(0,35),rep(1,19),rep(0,42)) # crisis months
regData$minwageDummy<-c(rep(0,30),rep(1,66)) # months after min wage increase
# Read in food and drinking places industry annual output for PA
foodSalesPA<-read.tcsv("data/RetailFoodServPA.csv")[c(-1:-2,-18),5:7][,-2]
names(foodSalesPA)<-c("Year","Food&Dr")
foodSalesPA[,2]<-as.numeric(as.character(foodSalesPA[,2]))
# Read in food and drinking places industry monthly output for the US
foodSales<-read.table("data/RetailFoodServ.csv",sep=",")
foodSales[,2]<-as.numeric(gsub(",","", foodSales[,2]))
# Calculate the annual food and drinking places industry output for the US
# using monthly data
foodSalesPA<-data.frame(foodSalesPA,US=0)
for(i in 0:6){
start<-13+12*i
end<-start+11
foodSalesPA[nrow(foodSalesPA)-i,3]<-sum(as.numeric(as.character(foodSales[start:end,2])))
rm(start,end)
}
# Compare food and drinking places industry output in the US and in PA
cPA1<-ggplot(foodSalesPA[foodSalesPA$US>0,],aes(x=foodSalesPA[foodSalesPA$US>0,1], y=foodSalesPA[foodSalesPA$US>0,2],group=1))+
ggtitle("Food Services and Drinking Places industry output in PA,\nmillions of dollars") +
theme(plot.title = element_text(size=18,face="bold")) +
geom_line() +
xlab("Year") + ylab("Millions of dollars") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
cPA2<-ggplot(foodSalesPA[foodSalesPA$US>0,],aes(x=foodSalesPA[foodSalesPA$US>0,1], y=foodSalesPA[foodSalesPA$US>0,3],group=1))+
ggtitle("Food Services and Drinking Places industry output in the US,\nmillions of dollars") +
theme(plot.title = element_text(size=18,face="bold")) +
geom_line() +
xlab("Year") + ylab("Millions of dollars") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
corr<-cor(foodSalesPA[foodSalesPA$US>0,2:3])[1,2]
grid.arrange(cPA2,cPA1,nrow=2, left=paste("Correlation =",round(corr,4),sep=" "))
rm(cPA1,cPA2,corr)
# Calculate the monthly percentage growth of the food serv and drink pl industry output in the US
regData$foodIndGrowth<-rev((foodSales[-nrow(foodSales),2]-foodSales[-1,2]) / foodSales[1:nrow(foodSales)-1,2])*100
# Plot foodIndGrowth
foodIndGrowthp<-ggplot(regData,aes(x=rownames(regData),y=regData[,4]))+
ggtitle("Monthly percent growth of the Food Services and Drinking Places\nindustry in the US") +
geom_point() +
theme(plot.title = element_text(size=18,face="bold")) +
xlab("Period")+ylab("Percent") +
geom_line(aes(y=regData[,4],group=1)) +
scale_x_discrete(breaks=grBreaks,labels=grBreaks) +
theme(axis.text.x=element_text(angle = 75, hjust = 1),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
# Save plot
foodIndGrowthp
rm(foodIndGrowthp,i,grBreaks)
# Save descriptive statistics of regression data to a pdf
nam<-names(regData)
temp<-regData
regData[,2]<-as.factor(regData[,2])
regData[,3]<-as.factor(regData[,3])
names(regData)[c(1,4)]<-c("Unemployment rate", "Food services and drinking places industry growth, %")
tex2pdf(regData[-96:-95,],title="Regression data descriptive statistics",1,"sum","figures")
regData<-temp
names(regData)<-nam
rm(nam,temp)
par(mfrow=c(1,2))
adf1<-summary(ur.df(regData[,1],type="drift")) # include intercept since mean is not 0
textplot(capture.output(adf1)[c(-1:-10)],cex=1)
title("Augmented Dickey Fuller Test\nfor the Unemployment Rate")
png("figures/ADF.png",units="px",height=450,width=920)
par(mfrow=c(1,2))
adf1<-summary(ur.df(regData[,1],type="drift")) # include intercept since mean is not 0
textplot(capture.output(adf1)[c(-1:-10)],cex=1)
title("Augmented Dickey Fuller Test\nfor the Unemployment Rate")
adf2<-summary(ur.df(regData[,4],type="none")) # dont include intercept since mean
textplot(capture.output(adf2)[c(-1:-10)],cex=1)
title("Augmented Dickey Fuller Test for the Percent Growth\nof the Food Services and Drinking Places Industry in PA")
par(mfrow=c(1,1))
dev.off()
png("figures/ADF.png",units="px",height=450,width=920)
par(mfrow=c(1,2))
adf1<-summary(ur.df(regData[,1],type="drift")) # include intercept since mean is not 0
textplot(capture.output(adf1)[c(-1:-10)],cex=1)
title("Augmented Dickey Fuller Test\nfor the Unemployment Rate")
adf2<-summary(ur.df(regData[,4],type="none")) # dont include intercept since mean
textplot(capture.output(adf2)[c(-1:-11)],cex=1)
title("Augmented Dickey Fuller Test for the Percent Growth\nof the Food Services and Drinking Places Industry in PA")
par(mfrow=c(1,1))
dev.off()
png("figures/ADF.png",units="px",height=450,width=920)
par(mfrow=c(1,2))
adf1<-summary(ur.df(regData[,1],type="drift")) # include intercept since mean is not 0
textplot(capture.output(adf1)[c(-1:-10)],cex=1)
title("Augmented Dickey Fuller Test\nfor the Unemployment Rate")
adf2<-summary(ur.df(regData[,4],type="none")) # dont include intercept since mean
textplot(capture.output(adf2)[c(-1:-12)],cex=1)
title("Augmented Dickey Fuller Test for the Percent Growth\nof the Food Services and Drinking Places Industry in PA")
par(mfrow=c(1,1))
dev.off()
png("figures/ADF.png",units="px",height=450,width=920)
par(mfrow=c(1,2))
adf1<-summary(ur.df(regData[,1],type="drift")) # include intercept since mean is not 0
textplot(capture.output(adf1)[c(-1:-10)],cex=1)
title("Augmented Dickey Fuller Test\nfor the Unemployment Rate")
adf2<-summary(ur.df(regData[,4],type="none")) # dont include intercept since mean
textplot(capture.output(adf2)[c(-1:-10)],cex=1)
title("Augmented Dickey Fuller Test for the Percent Growth\nof the Food Services and Drinking Places Industry in PA")
par(mfrow=c(1,1))
dev.off()
rm(adf1,adf2)
# Regression using the unemployment rate as dependent variable
mod<-lm(unemp~tslag(unemp,1) + tslag(foodIndGrowth,2) + crimonthDummy + tslag(minwageDummy,1),regData)
summary(mod)
# Output regression results
#Add appropriate names to variables
names(mod$coefficients)<-c("(Intercept)",
"Unemployment rate(1)",
"FoodIndGrowth(2)",
"CrisisMonth",
"MinimumWage(1)")
# create table in latex
tex2pdf(mod,title="Regression output",2,"reg","figures")
tex2pdf<-function(table,title="",tableNumber=1,file,targetDir=getwd()){
tex<-stargazer(table,type = "latex",title=title)
tableNum<-paste("\\setcounter{table}{",tableNumber-1,"}",sep="")
# save a latex file to Sweave
cat(c("\\documentclass{article}
\\begin{document}
\\SweaveOpts{concordance=TRUE}\n",
tableNum,
tex,
"\n\\end{document} "),sep="\n",file=paste(targetDir,"/",file,".Rnw",sep=""))
# Convert to pdf in the figures directory (texipdf does not have out option)
wd<-getwd()
setwd(targetDir)
Sweave(paste(file,".Rnw",sep=""))
texi2pdf(paste(file,".tex",sep=""))
file.remove(paste(file,".tex",sep=""),paste(file,".aux",sep=""),
paste(file,".log",sep=""),
paste(file,"-concordance.tex",sep=""),
paste(file,".Rnw",sep=""))
setwd(wd)
rm(wd,tex,targetDir,file)
}
tex2pdf(mod,title="Regression output",3,"reg","figures")
tex2pdf
tex2pdf<-function(table,title="",tableNumber=1,fileName,targetDir=getwd()){
tex<-stargazer(table,type = "latex",title=title)
tableNum<-paste("\\setcounter{table}{",tableNumber-1,"}",sep="")
# save a latex file to Sweave
cat(c("\\documentclass{article}
\\begin{document}
\\SweaveOpts{concordance=TRUE}\n",
tableNum,
tex,
"\n\\end{document} "),sep="\n",file=paste(targetDir,"/",file,".Rnw",sep=""))
# Convert to pdf in the figures directory (texipdf does not have out option)
wd<-getwd()
setwd(targetDir)
Sweave(paste(file,".Rnw",sep=""))
texi2pdf(paste(file,".tex",sep=""))
file.remove(paste(file,".tex",sep=""),paste(file,".aux",sep=""),
paste(file,".log",sep=""),
paste(file,"-concordance.tex",sep=""),
paste(file,".Rnw",sep=""))
setwd(wd)
rm(wd,tex,targetDir,file)
}
par(mfrow=c(1,2))
acf(regData$unemp,main="Serial correlation of Unemployment Rate in the\nFood Services and Drinking Places Industry in PA")
acf(regData$foodIndGrowth, main="Serial correlation of the Food Services and\nDrinking Places Industry Output % Growth in PA")
par(mfrow=c(1,1))
plot(mod$residuals,main="Residuals of the model", ylab="Residuals")
abline(h=0,lty=2)
plot(mod$residuals,main="Residuals of the model", ylab="Residuals")
abline(h=0,lty=2)
acf(mod$residuals,main="Serial correlation of the model's residuals")
sum(dPA[dPA$PRML %in% c(1,2) & dPA$YYYYMM==201212,11])*0.0133
acf(mod$residuals,main="Serial correlation of the model's residuals")
png("figures/SCResid.png",units="px",height=480,width=480)
acf(mod$residuals,main="Serial correlation of the model's residuals")
dev.off()
acf(mod$residuals,main="Serial correlation of the model's residuals")
title(cex=0.7)
acf(mod$residuals,main="Serial correlation of the model's residuals")
title(cex=0.7)
acf(mod$residuals)
title("Serial correlation of the model's residuals",cex=0.7)
acf(mod$residuals,main="")
title("Serial correlation of the model's residuals",cex=0.7)
title("Serial correlation of the model's residuals",cex=0.4)
acf(mod$residuals,main="")
title("Serial correlation of the model's residuals",cex=0.4)
acf(mod$residuals,main="Serial correlation of the model's residuals",cex.main=0.7)
acf(mod$residuals,main="Serial correlation of the model's residuals",cex.title=0.7)
acf(mod$residuals,main="Serial correlation of the model's residuals",cex.main=0.7)
acf(mod$residuals,main="Serial correlation of the model's residuals",cex.main=0.2)
?acf
acf(mod$residuals,main="")
title("Serial correlation of the model's residuals",cex.main=0.2)
title("Serial correlation of the model's residuals",cex.main=0.7)
title("Serial correlation of the model's residuals",cex.main=0.9)
png("figures/SCResid.png",units="px",height=350,width=480)
acf(mod$residuals,main="")
title("Serial correlation of the model's residuals",cex.main=0.9)
dev.off()
png("figures/SCResid.png",units="px",height=350,width=480)
acf(mod$residuals,main="")
title("Serial correlation of the model's residuals",cex.main=0.8)
dev.off()
?file.path
file.path("ECON322Paper/R")
setwd("~/ECON322Paper/R")
getwd()
setwd()
setwd("~/Desktop")
setwd("~/ECON322Paper/R")
setwd("~/Desktop/ECON322Paper/R")
install.packages("urca","plotrix","gridExtra","tseries","car", "stargazer","gplots")
library(plotrix)
library(ggplot2)
library(gridExtra)
library(tseries)
library(stargazer)
library(tools)
library(urca)
library(gplots)
dir()
readLines("data/USMonthlyGDP.csv")
readLines("data/USMonthlyGDP.csv",n=5)
?read.csv
USGDP<-read.csv("data/USMonthlyGDP.csv",sep=",",quote="\"",skip=3)
head(USGDP)
USGDP<-read.csv("data/USMonthlyGDP.csv",header=FALSE,sep=",",quote="\"",skip=3)
head(USGDP)
regData
USGDP<-read.csv("data/USMonthlyGDP.csv",header=FALSE,sep=",",quote="\"",skip=3)
head(USGDP)
tail(USGDP)
?gsub
gsub("[0-9].T",USGDP)
gsub("[0-9].T",USGDP[,2])
USGDP<-read.csv("data/USMonthlyGDP.csv",header=FALSE,sep=",",quote="\"",skip=3)
gsub("[0-9].T",USGDP[,2])
gsub("[0-9].T","",USGDP[,2])
gsub("[0-9].[0-9]T","",USGDP[,2])
gsub("[0-9].[0-9]T","1",USGDP[,2])
gsub("[0-9].[0-9]T","[0-9]",USGDP[,2])
USGDP[,2]<-gsub("[0-9].[0-9]T","[0-9]",USGDP[,2])
head(USGDP)
gsub(". & T","[0-9]",USGDP[,2])
gsub(". & T","",USGDP[,2])
gsub(". && T","",USGDP[,2])
gsub(".","",USGDP[,2])
gsub("T","",USGDP[,2])
gsub("\.","",USGDP[,2])
gsub("\\.","",USGDP[,2])
gsub("\\. && T","",USGDP[,2])
gsub("\\. || T","",USGDP[,2])
gsub("\\. | T","",USGDP[,2])
gsub("\\.","",USGDP[,2])
gsub("\\.|T","",USGDP[,2])
USGDP[,2]<-gsub("\\.|T","",USGDP[,2])*1000 # clean data and scale to millions dollars
USGDP[,2]<-as.numeric(gsub("\\.|T","",USGDP[,2]))*1000 # clean data and scale to millions dollars
head(USGDP)
USGDP[,2]<-as.numeric(gsub("\\.|T","",USGDP[,2]))*10 # clean data and scale to millions dollars
head(USGDP)
USGDP<-read.csv("data/USMonthlyGDP.csv",header=FALSE,sep=",",quote="\"",skip=3)
USGDP[,2]<-as.numeric(gsub("\\.|T","",USGDP[,2]))*10 # clean data and scale to millions dollars
head(USGDP)
head(regData)
tail(USGDP)
(USGDP[-1,2]-USGDP[-97,2])/USGDP[-97,2]
(USGDP[-1,2]-USGDP[-97,2])/USGDP[-97,2]*100
USGDP$Growth%<-(USGDP[-1,2]-USGDP[-97,2])/USGDP[-97,2]*100
USGDP$PerGrowth<-(USGDP[-1,2]-USGDP[-97,2])/USGDP[-97,2]*100
USGDP$PerGrowth<-c((USGDP[-1,2]-USGDP[-97,2])/USGDP[-97,2]*100,0)
tail(USGDP)
plot(USGDP[,3])
regData
corr(USGDP[,3],regData[,4])
cor(USGDP[,3],regData[,4])
cor(USGDP[-97,3],regData[,4])
regData$USGDPGrowth<-USGDP[-97,]$PerGrowth
plot(regData[,4:5])
plot(regData[,5],type="l")
plot(regData[,4],type="l")
mo<-lm(unemp~tslag(unemp,1) + tslag(foodIndGrowth,2) + crimonthDummy+ USGDPGrowth + tslag(minwageDummy,1),regData)
summary(mo)
mo<-lm(unemp~tslag(unemp,1) + tslag(foodIndGrowth,2) + crimonthDummy+ tslag(USGDPGrowth,1) + tslag(minwageDummy,1),regData)
summary(mo)
mo<-lm(unemp~tslag(unemp,1) + tslag(foodIndGrowth,2) + crimonthDummy+ tslag(USGDPGrowth,2) + tslag(minwageDummy,1),regData)
summary(mo)
mo<-lm(unemp~tslag(unemp,1) + tslag(foodIndGrowth,2) + crimonthDummy+ tslag(USGDPGrowth,3) + tslag(minwageDummy,1),regData)
summary(mo)
mo<-lm(unemp~tslag(unemp,1) + tslag(foodIndGrowth,2) + crimonthDummy+ tslag(USGDPGrowth,4) + tslag(minwageDummy,1),regData)
summary(mo)
mo<-lm(unemp~tslag(unemp,1) + tslag(foodIndGrowth,2) + tslag(USGDPGrowth,4) + tslag(minwageDummy,1),regData)
summary(mo)
mo<-lm(unemp~tslag(unemp,1) + tslag(foodIndGrowth,2) + tslag(USGDPGrowth,5) + tslag(minwageDummy,1),regData)
summary(mo)
mo<-lm(unemp~tslag(unemp,1) + tslag(foodIndGrowth,2) + tslag(USGDPGrowth,6) + tslag(minwageDummy,1),regData)
summary(mo)
mo<-lm(unemp~tslag(unemp,1) + tslag(foodIndGrowth,2) + tslag(USGDPGrowth,7) + tslag(minwageDummy,1),regData)
summary(mo)
mo<-lm(unemp~tslag(unemp,1) + tslag(USGDPGrowth,7) + tslag(minwageDummy,1),regData)
summary(mo)
mo<-lm(unemp~tslag(unemp,1) + tslag(USGDPGrowth,4) + tslag(minwageDummy,1),regData)
summary(mo)
mo<-lm(unemp~tslag(unemp,1) + tslag(USGDPGrowth,1) + tslag(minwageDummy,1),regData)
summary(mo)
mo<-lm(unemp~tslag(unemp,1) + tslag(USGDPGrowth,2) + tslag(minwageDummy,1),regData)
summary(mo)
mo<-lm(unemp~tslag(unemp,1) + tslag(USGDPGrowth,3) + tslag(minwageDummy,1),regData)
summary(mo)
mo<-lm(unemp~tslag(unemp,1) + tslag(USGDPGrowth,4) + tslag(minwageDummy,1),regData)
summary(mo)
mo<-lm(unemp~tslag(unemp,1) + tslag(USGDPGrowth,5) + tslag(minwageDummy,1),regData)
summary(mo)
USGDP
USGDP$PerGrowth<-c((USGDP[-97,2]-USGDP[-1,2])/USGDP[-1,2]*100,0)
USGDP
foodSales
regData
USGDP$PerGrowth<-c((USGDP[-97,2]-USGDP[-1,2])/USGDP[-97,2]*100,0)
# End
USGDP
(12350-12170)/12170
USGDP$PerGrowth<-c((USGDP[-97,2]-USGDP[-1,2])/USGDP[-1,2]*100,0)
# End
regData$USGDPGrowth<-USGDP[-97,]$PerGrowth
mo<-lm(unemp~tslag(unemp,1) + tslag(USGDPGrowth,5) + tslag(minwageDummy,1),regData)
summary(mo)
mo<-lm(unemp~tslag(unemp,1) + tslag(USGDPGrowth,0) + tslag(minwageDummy,1),regData)
summary(mo)
mo<-lm(unemp~tslag(unemp,1) + tslag(USGDPGrowth,1) + tslag(minwageDummy,1),regData)
summary(mo)
mo<-lm(unemp~tslag(unemp,1) + tslag(USGDPGrowth,2) + tslag(minwageDummy,1),regData)
summary(mo)
mo<-lm(unemp~tslag(unemp,1) + tslag(USGDPGrowth,3) + tslag(minwageDummy,1),regData)
summary(mo)
mo<-lm(unemp~tslag(unemp,1) + tslag(USGDPGrowth,4) + tslag(minwageDummy,1),regData)
summary(mo)
1:9-1
mo<-lm(unemp~tslag(unemp,1) + tslag(foodIndGrowth,2) + tslag(USGDPGrowth,4) + tslag(minwageDummy,1),regData)
summary(mo)
cor(regData[,4],regData[,5])
mo<-lm(unemp~tslag(unemp,1) + crimonthDummy + tslag(foodIndGrowth,2) + tslag(USGDPGrowth,4) + tslag(minwageDummy,1),regData)
summary(mo)
mo<-lm(unemp~tslag(unemp,1) + tslag(foodIndGrowth,2) + tslag(USGDPGrowth,4) + crimonthDummy + tslag(minwageDummy,1),regData)
summary(mo)
mo<-lm(unemp~tslag(unemp,1) + tslag(foodIndGrowth,2) + tslag(USGDPGrowth,4) + crimonthDummy + tslag(minwageDummy,1),regData)
summary(mo)
names(mo$coefficients)<-c("(Intercept)",
"Unemployment rate(1)",
"USFoodIndGrowth(2)",
"USGDPGrowth(4)",
"CrisisMonth",
"MinimumWage(1)")
tex2pdf(mod,title="Regression output",4,"reg2","figures")
tex2pdf(mo,title="Regression output",4,"reg2","figures")
mo<-lm(unemp~tslag(unemp,1) + tslag(foodIndGrowth,2) + tslag(USGDPGrowth,4) + crimonthDummy + tslag(minwageDummy,1),regData)
summary(mo)
names(mo$coefficients)<-c("(Intercept)",
"Unemployment rate(1)",
"USFoodIndGrowth(2)",
"USGDPGrowth(4)",
"CrisisMonth",
"MinimumWage(1)")
# create table in latex
tex2pdf(mo,title="Regression output",4,"reg2","figures")
tex2pdf(mo,title="Regression output",4,"reg2","figures")
setwd("~/Desktop/ECON322Paper/R")
library(plotrix)
library(ggplot2)
library(gridExtra)
library(tseries)
library(stargazer)
library(tools)
library(urca)
library(gplots)
tex2pdf(mo,title="Regression output",4,"reg2","figures")
